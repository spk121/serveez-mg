-- 
-- README-Win32
-- 
-- Copyright (C) 2000, 2001, 2002, 2003 Stefan Jahn <stefan@lkcc.org>
-- 
-- This is free software; you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation; either version 2, or (at your option)
-- any later version.
-- 
-- This software is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
-- 
-- You should have received a copy of the GNU General Public License
-- along with this package; see the file COPYING.  If not, write to
-- the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
-- Boston, MA 02111-1307, USA.  
--


Introduction
============

   This is the README for the native Win32 port of this package.  It uses 
the original M$ Visual C++ compiler to create both the Serveez library 
and the actual Serveez binary.  You will need at least version 5.0 of this
compiler (higher versions do convert the projects automatically).  Of course,
the Cygwin and MinGW32 port via the gcc for Win32 is still supported, but it
seems to be much better to do it this way.


Files
=====

README-Win32                     - this file
serveez.dsw                      - the Serveez workspace file
src/serveez.dsp                  - the Serveez project file
src/libserveez/libserveez.dsp    - the core library project file
vcgen.bat	                 - copies files to the final location
config.h.serveez                 - prebuild config.h for Serveez
src/svzconfig.h.serveez          - prebuild svzconfig.h for Serveez
src/libserveez/svzpath.h.serveez - prebuild svzpath.h for Serveez
version.h.serveez                - prebuild version.h for Serveez
src/mkpassword.dsp               - the mkpassword project file
test/hash.dsp                    - hash test project file
test/array.dsp                   - array test project file
test/vector.dsp                  - vector list project file
test/spvec.dsp                   - sparse vector test project file
test/codec.dsp                   - codec interface test project file
test/prog.dsp                    - passthrough test client project file
autodsp                          - creates the workspace and project files


Installation
============

   First unpack the package archive of Serveez to the directory `serveez/'. 
Then you need to copy some files to their native location.  The `vcgen.bat'
batch file does this for you.

    $ copy config.h.serveez config.h
    $ copy src\svzconfig.h.serveez src\svzconfig.h
    $ copy src\libserveez\svzpath.h.serveez src\libserveez\svzpath.h
    $ copy version.h.serveez version.h

   If you have done these preperations you can open the Serveez workspace
file `serveez.dsw' which contains both of the project files with the right
depedencies.  There are generally two versions of the projects: "Dbg" and
"Opt".  Choose either of the "Debug" or "Release" version of the Serveez
project and compile.  That's it!  After this you will have the `serveez.exe'
binary which depends on the `libserveez.dll'.

   All of the prebuild `version.h's and `config.h's have been created with
a current Cygwin installation.  You wish to create them yourself, but this
is optional.  You just need to adjust the paths.

    $ c:\Programme\DevStudio\VC\bin\VCVARS32.BAT
    $ set PATH=%PATH%;c:\Programme\cygwin\bin
    $ set CC=cl -D__MINGW32__ -D_WIN32
    $ set LD=link
    $ sh configure --disable-debug --host=mingw32 --build=mingw32 \
		   --with-thread-safety --with-guile=<directory>


Requirements
============

  Serveez also depends on the GNU packages bzip2, zlib and Guile.  You 
should install these packages somewhere the compiler can find the include
headers and libraries.  Binary packages built with the M$ Visual C++ 
compiler can be obtained at <http://www.lkcc.org/~ela/devel.html#gnu> 
and the packages for the MinGW32 gcc toolchain can be obtained at 
<http://www.sourceforge.net/projects/mingwrep>.
